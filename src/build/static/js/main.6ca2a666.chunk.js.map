{"version":3,"sources":["HeaderContainer/index.js","RightSection/FileList/index.js","RightSection/FileUploader/index.js","Login/index.js","history.js","Home/index.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","props","AppBar","position","className","clsx","classes","appBar","appBarShift","open","Toolbar","isAuthed","IconButton","color","aria-label","onClick","handleDrawerOpen","edge","menuButton","hide","Typography","variant","noWrap","username","FileList","React","useState","fileList","setFileList","columns","field","headerName","width","renderCell","params","useEffect","axios","method","url","then","response","console","log","data","catch","error","style","height","rows","pageSize","onCellClick","accessToken","file","getValue","put","filename","headers","Authorization","alert","filteredFileList","filter","obj","fileDescription","link","document","createElement","href","download","target","click","cellClick","FileUploader","useDropzone","onDrop","files","size","fileKey","name","urlMain","type","get","fileUploadURL","res","fileUploadedTime","Date","toString","fileUpdatedTime","err","getRootProps","getInputProps","isDragActive","Login","setUsername","password","setPassword","setAccessToken","isLoginFailed","setIsLoginFailed","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","onSuccess","result","idToken","jwtToken","onFailure","userPool","CognitoUserPool","UserPoolId","ClientId","Container","component","maxWidth","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","label","autoFocus","onChange","event","value","Button","cognitoUser","CognitoUser","Username","Pool","authenticationDetails","AuthenticationDetails","Password","authenticateUser","newPasswordRequired","userAttributes","requiredAttributes","completeNewPasswordChallenge","createBrowserHistory","root","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","marginRight","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Home","useTheme","setOpen","setIsAuthed","history","push","Drawer","anchor","direction","Divider","List","ListItem","button","Link","to","ListItemIcon","ListItemText","exact","path","token","setLoginDetails","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6ca2a666.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport clsx from \"clsx\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst HeaderContainer = (props) => {\r\n  return (\r\n    <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(props.classes.appBar, {\r\n        [props.classes.appBarShift]: props.open\r\n        })}\r\n    >\r\n        <Toolbar>\r\n        { props.isAuthed ? <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={props.handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(props.classes.menuButton, props.open && props.classes.hide)}\r\n        >\r\n            <MenuIcon />\r\n        </IconButton> : null }\r\n        <Typography variant=\"h6\" noWrap>\r\n            My File Manager\r\n        </Typography>\r\n        { props.username !== '' ? <div>Welcome {props.username}</div> : null }\r\n        </Toolbar>\r\n    </AppBar>\r\n    );\r\n};\r\n\r\nexport default HeaderContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axios from \"axios\";\r\n\r\nconst FileList = (props) => {\r\n  const [fileList, setFileList] = React.useState([]);\r\n  const columns = [\r\n    { field: 'fileDescription', headerName: 'File Name', width: 150 },\r\n    ...(props.username === 'admin' ? [ { field: 'username', headerName: 'Username', width: 100 }] : []),\r\n    { field: 'fileUpdatedTime', headerName: 'Last Modified', width: 250 },\r\n    { field: 'fileUploadedTime', headerName: 'Last Modified', width: 250 },\r\n    {\r\n      field: 'download',\r\n      headerName: 'Download',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <strong>\r\n          <span>Download</span>\r\n        </strong>\r\n      )\r\n    },\r\n    {\r\n      field: 'delete',\r\n      headerName: 'Delete',\r\n      width: 150,\r\n      renderCell: (params) => (\r\n        <strong>\r\n          <span>Delete</span>\r\n        </strong>\r\n      )\r\n    },\r\n  ];\r\n  \r\n  useEffect(() => {\r\n    \r\n    // Get File list from database\r\n    if (props.username === 'admin'){\r\n      axios({\r\n        method: \"Get\",\r\n        url: 'http://localhost:8000/getFullFileList'\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        if (response.data) {\r\n          setFileList(response.data);\r\n        } else {\r\n          setFileList([]);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        setFileList([]);\r\n        console.log(error);\r\n      });  \r\n    } else if (props.username !== ''){\r\n      axios({\r\n        method: \"POST\",\r\n        url: 'http://localhost:8000/getFileList',\r\n        data: {\r\n            username: props.username\r\n          },\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        if (response.data) {\r\n          setFileList(response.data);\r\n        } else {\r\n          setFileList([]);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        setFileList([]);\r\n        console.log(error);\r\n      });  \r\n    }\r\n  }, [props.username]);\r\n\r\n\r\n  const cellClick = (params, accessToken) => {\r\n    const file = params.getValue('fileDescription');\r\n    if (params.field === 'delete') {\r\n      axios.put('https://h1wipggwz9.execute-api.us-east-2.amazonaws.com/Dev', {filename: file}, {headers: {Authorization: accessToken}}).then((response) => {\r\n        axios({\r\n          method: \"POST\",\r\n          url: 'http://localhost:8000/deleteFile',\r\n          data: {\r\n              username: props.username,\r\n              filename: file\r\n            },\r\n        })\r\n        .then(function (response) {\r\n          console.log(response);\r\n          alert('File Deleted successfully');\r\n          const filteredFileList  = fileList.filter(function( obj ) {\r\n            return obj.fileDescription !== file;\r\n          });\r\n          setFileList(filteredFileList);\r\n\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });  \r\n      \r\n      });\r\n    } else if (params.field === 'download') {\r\n      axios.put('https://ug1bk5i0i1.execute-api.us-east-2.amazonaws.com/Dev', {filename: file}, {headers: {Authorization: accessToken}}).then((response) => {\r\n        alert('File Downloaded successfully');\r\n        // let blob = new Blob([response.data.Body], { type: response.data.ContentType });\r\n        // let link = document.createElement(\"a\");\r\n        // link.href = window.URL.createObjectURL(blob);\r\n        \r\n        \r\n        let link = document.createElement(\"a\");\r\n        link.href = response.data;\r\n        \r\n        \r\n        link.download = file;\r\n        link.target = \"_blank\";\r\n        link.download = file;\r\n        link.click();\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <div style={{ height: 400, width: '90%' }}>\r\n      <DataGrid rows={fileList} columns={columns} pageSize={5} onCellClick={(params) => cellClick(params, props.accessToken)}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileList;","import React from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport axios from \"axios\";\r\n\r\nconst FileUploader = (props) => {\r\n\r\n    const onDrop = (files) => {\r\n        if (files[0].size > 10000000) {\r\n            alert('File size > 10MB is not allowed');\r\n        }\r\n        const fileKey = files[0].name;\r\n        const urlMain = \"https://zf1jtpxmd0.execute-api.us-east-2.amazonaws.com/Dev?fileName=\" + \r\n        files[0].name + \"&fileType=\" + files[0].type + \"&fileKey=\" + fileKey;\r\n        axios.get(urlMain, {headers: {Authorization: props.accessToken}}).then((response) => {\r\n            // Getting the url from response\r\n            const url = response.data.fileUploadURL;\r\n   \r\n            // Initiating the PUT request to upload file    \r\n            axios({\r\n                method: \"PUT\",\r\n                url: url,\r\n                data: files[0],\r\n                headers: { \"Content-Type\": \"multipart/form-data\" },\r\n            })\r\n                .then(res => {\r\n                    axios({\r\n                        method: \"POST\",\r\n                        url: 'http://localhost:8000/fileUpload',\r\n                        data: {\r\n                            username: props.username,\r\n                            fileUploadedTime: new Date().toString(),\r\n                            fileUpdatedTime: new Date().toString(),\r\n                            fileDescription: files[0].name\r\n                          },\r\n                    })\r\n                      .then(function (response) {\r\n                        console.log(response);\r\n                        alert('File Uploadeded successfully');\r\n                      })\r\n                      .catch(function (error) {\r\n                        console.log(error);\r\n                        alert('File Uploadeded successfully but entry is not added to database');\r\n                      });\r\n                })\r\n                .catch(err => {\r\n                    alert('Error');\r\n                });\r\n        });\r\n    };\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\r\n        return (\r\n            <div>\r\n                <div {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                {\r\n                    isDragActive ?\r\n                    <p>Drop the files here ...</p> :\r\n                    <p>Drag 'n' drop some files here, or click to select files</p>\r\n                }\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default FileUploader;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { CognitoUserPool, CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst Login = (props) => {\r\n    \r\n    const [username, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [, setAccessToken] = React.useState('');\r\n    const [isLoginFailed, setIsLoginFailed] = React.useState(false);\r\n    \r\n\r\n    const UserPoolId = 'us-east-2_kXxKhhmfs';\r\n    const ClientId = '1e67eu8mqp1c51rvgb7qaoq5j9';\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', // Fix IE 11 issue.\r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n          margin: theme.spacing(3, 0, 2),\r\n        },\r\n      }));\r\n\r\n    const onSuccess = (result) => {\r\n        setAccessToken(result.idToken.jwtToken);\r\n        setIsLoginFailed(false);\r\n        props.onSuccess(result.idToken.jwtToken, username);\r\n    };\r\n\r\n    const onFailure = (error) => {\r\n        setIsLoginFailed(true);\r\n    }\r\n\r\n    const userPool = new CognitoUserPool({\r\n        UserPoolId: UserPoolId,\r\n        ClientId: ClientId,\r\n    });\r\n\r\n    const onLogin = () => {\r\n        \r\n        let cognitoUser = new CognitoUser({\r\n            Username: username,\r\n            Pool: userPool,\r\n        });\r\n        \r\n        const authenticationDetails = new AuthenticationDetails({\r\n            Username: username,\r\n            Password: password,\r\n        });\r\n    \r\n        cognitoUser.authenticateUser(authenticationDetails, {\r\n            onSuccess: onSuccess,\r\n            onFailure: onFailure,\r\n            newPasswordRequired: (userAttributes, requiredAttributes) => {\r\n                console.log(\"newPasswordRequired\");\r\n                console.log(userAttributes);\r\n        \r\n                // not interesting for this demo - add a bogus e-mail and append an X to the initial password\r\n                userAttributes['email'] = 'test@abc.com';\r\n                cognitoUser.completeNewPasswordChallenge(password + 'X', userAttributes, this);\r\n            },\r\n        });\r\n    }\r\n    const classes = useStyles();\r\n\r\n        return (\r\n            <div>            \r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Username\"\r\n                        autoFocus\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={onLogin}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    </form>\r\n                </div>\r\n                { isLoginFailed ? <p>Invalid Credentials</p> : null }\r\n\r\n                </Container>\r\n\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Login;","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory({\r\n  /* pass a configuration object here if needed */\r\n});","import React, { useEffect } from \"react\";\r\nimport { Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\nimport HeaderContainer from '../HeaderContainer';\r\nimport FileList from '../RightSection/FileList';\r\nimport FileUploader from '../RightSection/FileUploader';\r\nimport Login from '../Login';\r\nimport history from '../history';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  }\r\n}));\r\n\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [isAuthed, setIsAuthed] = React.useState(false);\r\n  const [accessToken, setAccessToken] = React.useState('');\r\n  const [username, setUsername] = React.useState('');\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (accessToken !== '') {\r\n      setIsAuthed(true);\r\n      history.push('list');\r\n      setOpen(true);\r\n    }\r\n  }, [accessToken]);\r\n\r\n  const setLoginDetails = (token, username) => {\r\n    setAccessToken(token);\r\n    setUsername(username);\r\n  }\r\n  return (\r\n    <Router history={history}>\r\n    <div className={classes.root}>\r\n      <HeaderContainer open={open} classes={classes} handleDrawerOpen={handleDrawerOpen} isAuthed={isAuthed} username={username}/>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button component={Link} to=\"/list\" >\r\n              <ListItemIcon>\r\n                <FileCopyIcon />\r\n              </ListItemIcon>\r\n            <ListItemText>My Files</ListItemText>\r\n          </ListItem>\r\n          { username !== 'admin' ? <ListItem button component={Link} to=\"/upload\" >\r\n              <ListItemIcon>\r\n                <CloudUploadIcon />\r\n              </ListItemIcon>\r\n            <ListItemText>Upload File</ListItemText>\r\n          </ListItem> : null }\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n      <div\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <Route exact path=\"/\" component={() => <Login onSuccess={(token, username) => setLoginDetails(token, username)} />} />\r\n        <Route path=\"/list\" component={() => <FileList accessToken={accessToken} username={username}/>} />\r\n        <Route path=\"/upload\" component={() => <FileUploader accessToken={accessToken} username={username}/>} />\r\n      </div>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\n\nimport Home from './Home';\n\nimport 'fontsource-roboto';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}